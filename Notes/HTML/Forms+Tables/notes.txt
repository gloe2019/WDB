Unit Goals:
- Create well-formatted HTML tables
- Understand when and when not to use tables
- Explain the role of the form element
- Utilize a variety of form controls
- Define complex HTML forms
- Add HTML5 Form Validations
- Ensure accessibiliuty of our forms

HTML tables
- Tables are structured sets of data, made up of rows and columnns
- In the early days of the web, tables were used to create page layouts. But today, you should only use the table element to create actual data tables!
- There are multiple elements that go into creating a table! -> Demo file=heaviest_birds.html

HTML forms
- The <form> element is just a shell/container that doesn't have any visual impact. We fill the form with a collection of inputs, boxes, etc.
- The form element represents a document section containing interactive controls for submitting information.
- The action attribute specifies WHERE the form data should be sent when the form is submitted
- The method attribute specifies which HTTP method should be used
    <Label>
    - <Label> represents a caption for an item 
    - labels are associated with the input element... super helpful for screen readers, and also makes the label clickable...
    - need to specify labels for your inputs...
    - use two attributes - id (on the input), and for (on the label). The values of these attributes must be identical.

    <Button>
    - Buttons are super common in forms.
    - The button element represents a clickable button duh...
    - When you click a button inside a form, it sends a request/operates on the action of your form... Buttons outside a form do nothing...
    The default type of a button inside a form is 'submit'. you can change the type attribute to 'button' to remove the submit action from the button

    The 'name' attribute
    - the value of the name attribute is paired with the input from the form...
    - when data is sent/submitted, it is labelled under/with the name for the server.

    Checkbox
    type="checkbox"